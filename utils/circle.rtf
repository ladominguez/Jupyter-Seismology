{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red160\green32\blue240;\red255\green0\blue0;\red0\green0\blue255;
}
{\*\expandedcolortbl;;\csgenericrgb\c62745\c12549\c94118;\csgenericrgb\c100000\c0\c0;\csgenericrgb\c0\c0\c100000;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs20 \cf0 import \cf2 math
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf3 #\cf0  inputs
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0 radius = 1000.0 \cf3 #\cf0  m - the following \cf2 code\cf0  \cf2 is\cf0  \cf2 an\cf0  \cf2 approximation\cf0  \cf2 that\cf0  \cf2 stays\cf0  \cf2 reasonably\cf0  \cf2 accurate\cf0  \cf2 for\cf0  \cf2 distances\cf0  \cf2 <\cf0  \cf2 100km
\fs24 \cf0 \

\fs20 centerLat = 30.0 \cf3 #\cf0  latitude \cf2 of\cf0  \cf2 circle\cf0  \cf2 center\cf0 , decimal \cf2 degrees
\fs24 \cf0 \

\fs20 centerLon = -100.0 \cf3 #\cf0  Longitude \cf2 of\cf0  \cf2 circle\cf0  \cf2 center\cf0 , decimal \cf2 degrees
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf3 #\cf0  parameters
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0 N = 10 \cf3 #\cf0  number \cf2 of\cf0  \cf2 discrete\cf0  \cf2 sample\cf0  \cf2 points\cf0  \cf2 to\cf0  \cf2 be\cf0  \cf2 generated\cf0  \cf2 along\cf0  \cf2 the\cf0  \cf2 circle
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf3 #\cf0  generate \cf2 points
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0 circlePoints = []
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf4 for\cf0  k in \cf2 xrange(N):
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0     \cf3 #\cf0  compute
\fs24 \

\fs20     angle = math.pi*2*k/N
\fs24 \

\fs20     dx = radius*math.cos(angle)
\fs24 \

\fs20     dy = radius*math.sin(angle)
\fs24 \

\fs20     point = \{\}
\fs24 \

\fs20     point[\cf2 'lat'\cf0 ]=centerLat + (180/math.pi)*(dy/6378137)
\fs24 \

\fs20     point[\cf2 'lon'\cf0 ]=centerLon + (180/math.pi)*(dx/6378137)/math.cos(centerLat*math.pi/180)
\fs24 \

\fs20     \cf3 #\cf0  add \cf2 to\cf0  \cf2 list
\fs24 \cf0 \

\fs20     circlePoints.append(point)
\fs24 \

\fs20  
\fs24 \

\fs20 print \cf2 circlePoints
\fs24 \cf0 \
\
}